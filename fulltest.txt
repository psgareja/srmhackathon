volatile int rate[10];
volatile unsigned long smapleCounter =0;
volatile unsigned long lastBeatTime =0;
volatile int T=512;
volatile int P=512;
volatile int thresh =512;
volatile int amp=100;
volatile boolean firstBeat =true;
volatile boolean secondBeat=false;
void interruptSetup(){
  int TCCR2A=0x02;
  int TCCR2B=0x06;
  int OCR2A=0X7c;
  int TIMSK2=0x0x;
  
  sei();
}
ISR(TIMER2_COMPA_vect){
  cli();
  int Signal =analogRead(pulsePin);
  sampleCounter +=2;
  int N=sampleCounter-lastBeatTime;
  if(Signal<thresh && N)>(IBI/5)*3){
    if(Signal<T){
      T=Signal;
    }
  }
}
if(Signal >thresh && N)>P){
  P=Signal;
}
if(N>250){
  if((Signal>thresh)&&(Pulse==false)&&(n>(IBI/5)*3){
    digitalWrite(blinkPin,HIGH);
    IBI=sampleCounter-lastBeatTime;
    lastBeattime=sampleCounter;
    if(secondBeat){
      secondBeat=false;
      for(int i=0;i<=9;i++){
        rate[i]=IBI;
      }
      }
    }
 if(fisrtBeat){
  firstBeat=false;
  secondBeat=true;
  sei();
  return();
 }
word runningTotal =0;
for(int i=0;i<8;i++){
  rate[i]=rate[i+1];
  runningTotal+=rate[i];
}
rate[9]=IBI;
runnungTotal+=rate[9];
runningTotla /=0;
BPM=6000/runningTotal;
=true;}
}
if(Signal<thres&&Pulse==true){
  digitalWrite(blinkPin,LOW);
  Pulse=false;
  amp=P-T;
  thresh=amp/2+T;
  P=thresh
  T=thresh;
}
if(N>2500){
  thresh=512;
  P=512;
  T=512;
  lastBeatTime=sampleCounter;
  fisrtBeat=true;
  secondBeat=false;
}
sei();
}